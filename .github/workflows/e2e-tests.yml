name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: tests/e2e/package-lock.json
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libxcb-composite0-dev \
          libgtk-3-dev \
          libasound2-dev \
          libxdo-dev
    
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build timeline editor (web target)
      run: |
        cd nannou_timeline/standalone_demo
        cargo build --bin timeline-demo-web --release
    
    - name: Install test dependencies
      run: |
        cd tests/e2e
        npm ci
        npx puppeteer browsers install chrome
    
    - name: Run E2E tests
      run: |
        cd tests/e2e
        npm test
      env:
        HEADLESS: true
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          tests/e2e/test-results/
          tests/e2e/screenshots/
    
    - name: Upload coverage
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: coverage
        path: tests/e2e/coverage/

  performance-benchmarks:
    runs-on: ubuntu-latest
    needs: e2e-tests
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup environment
      uses: ./.github/actions/setup-test-env
    
    - name: Run performance benchmarks
      run: |
        cd tests/e2e
        npm run test:performance
    
    - name: Upload benchmark results
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-results
        path: tests/e2e/benchmark-results.json
    
    - name: Comment PR with results
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const results = JSON.parse(fs.readFileSync('tests/e2e/benchmark-results.json'));
          
          const comment = `## Performance Test Results
          
          | Metric | Result | Target | Status |
          |--------|--------|--------|--------|
          | Average FPS | ${results.fps.avg} | 60 | ${results.fps.avg >= 58 ? '✅' : '❌'} |
          | Min FPS | ${results.fps.min} | 55 | ${results.fps.min >= 55 ? '✅' : '❌'} |
          | Avg Seek Time | ${results.seek.avg}ms | <20ms | ${results.seek.avg < 20 ? '✅' : '❌'} |
          | Script Execution | ${results.script.avg}ms | <5ms | ${results.script.avg < 5 ? '✅' : '❌'} |
          | Memory (100 layers) | ${results.memory.mb}MB | <500MB | ${results.memory.mb < 500 ? '✅' : '❌'} |
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });